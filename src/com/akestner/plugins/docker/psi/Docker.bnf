{
    parserClass="com.akestner.plugins.docker.parsing.DockerParser"
    parserUtilClass="org.intellij.grammar.parser.GeneratedParserUtilBase"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Docker"
    psiImplClassSuffix="Impl"
    psiPackage="com.akestner.plugins.docker.psi"
    psiImplPackage="com.akestner.plugins.docker.psi.impl"

    elementTypeClass="com.akestner.plugins.docker.parsing.DockerElementType"
    tokenTypeClass="com.akestner.plugins.docker.parsing.DockerTokenTypes"

    elementTypeHolderClass="com.akestner.plugins.docker.parsing.DockerTypes"
}

dockerFile ::= item_*

private item_ ::= {LineTermination} | {BlankLine} | {CommentLine} | {InstructionLine}

InstructionLine ::= {Directive} {'regexp:[A-Za-z0-9]*'} {LineTermination}
Directive ::= {From}|{Maintainer}|{Run}|{Cmd}|{Expose}|{Env}|{Add}|{Entrypoint}|{User}|{Volume}|{Workdir}

BlankLine ::= ({OptionalWhitespace} | {Nothing})* {LineTermination}
CommentLine ::= '#' 'AZaz09' {LineTermination}

From ::= 'FROM'|'from'
Maintainer ::= 'MAINTAINER'|'maintainer'
Run ::= 'RUN'|'run'
Cmd ::= 'CMD'|'cmd'
Expose ::= 'EXPOSE'|'expose'
Env ::= 'ENV'|'env'
Add ::= 'ADD'|'add'
Entrypoint ::= 'ENTRYPOINT'|'entrypoint'
User ::= 'USER'|'user'
Volume ::= 'VOLUME'|'volume'
Workdir ::= 'WORKDIR'|'workdir'

Nothing ::= ""
Whitespace ::= "regexp:[ \t\f]"
OptionalWhitespace ::= {Whitespace} {OptionalWhitespace} | {Nothing}
LineTermination ::= '\n'|'\r'|'\r\n'